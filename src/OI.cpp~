// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArcadeDrive.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Pish1.h"
#include "Commands/Pish2A.h"
#include "Commands/Pish2B.h"
#include "Commands/Spinny.h"
#include "Commands/Spinny2.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    pad.reset(new Joystick(0));
    
    doubleSolOut.reset(new JoystickButton(pad.get(), 5));
    doubleSolOut->WhileHeld(new Pish2B());
    doubleSolIn.reset(new JoystickButton(pad.get(), 5));
    doubleSolIn->WhileHeld(new Pish2A());
    spinButton2.reset(new JoystickButton(pad.get(), 4));
    spinButton2->WhileHeld(new Spinny2());
    doubleSol.reset(new JoystickButton(pad.get(), 3));
    doubleSol->WhileHeld(new Pish2A());
    oneSol.reset(new JoystickButton(pad.get(), 2));
    oneSol->WhileHeld(new Pish1());
    spinButton.reset(new JoystickButton(pad.get(), 1));
    spinButton->WhileHeld(new Spinny());
    joy.reset(new Joystick(1));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("Pish2B", new Pish2B());
    SmartDashboard::PutData("Spinny2", new Spinny2());
    SmartDashboard::PutData("Pish2A", new Pish2A());
    SmartDashboard::PutData("Pish1", new Pish1());
    SmartDashboard::PutData("Spinny", new Spinny());
    SmartDashboard::PutData("ArcadeDrive", new ArcadeDrive());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoy() {
   return joy;
}

std::shared_ptr<Joystick> OI::getPad() {
   return pad;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
