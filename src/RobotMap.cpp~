// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftFront;
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftRear;
std::shared_ptr<SpeedController> RobotMap::driveTrainRightFront;
std::shared_ptr<SpeedController> RobotMap::driveTrainRightRear;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive41;
std::shared_ptr<Compressor> RobotMap::driveTrainComp;
std::shared_ptr<Solenoid> RobotMap::singleSolSSol;
std::shared_ptr<DoubleSolenoid> RobotMap::doubleSolDSol;
std::shared_ptr<DigitalInput> RobotMap::switchLimitSwitch;
std::shared_ptr<SpeedController> RobotMap::spinSpinOnly;
std::shared_ptr<AnalogInput> RobotMap::potpot;
std::shared_ptr<AnalogInput> RobotMap::ultraSonicUltra;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainLeftFront.reset(new Talon(1));
    lw->AddActuator("Drive Train", "Left Front", std::static_pointer_cast<Talon>(driveTrainLeftFront));
    
    driveTrainLeftRear.reset(new Talon(2));
    lw->AddActuator("Drive Train", "Left Rear", std::static_pointer_cast<Talon>(driveTrainLeftRear));
    
    driveTrainRightFront.reset(new Talon(3));
    lw->AddActuator("Drive Train", "Right Front", std::static_pointer_cast<Talon>(driveTrainRightFront));
    
    driveTrainRightRear.reset(new Talon(4));
    lw->AddActuator("Drive Train", "Right Rear", std::static_pointer_cast<Talon>(driveTrainRightRear));
    
    driveTrainRobotDrive41.reset(new RobotDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightRear));
    
    driveTrainRobotDrive41->SetSafetyEnabled(true);
        driveTrainRobotDrive41->SetExpiration(0.1);
        driveTrainRobotDrive41->SetSensitivity(0.5);
        driveTrainRobotDrive41->SetMaxOutput(1.0);

    driveTrainComp.reset(new Compressor(0));
    
    
    singleSolSSol.reset(new Solenoid(0, 2));
    lw->AddActuator("Single Sol", "SSol", singleSolSSol);
    
    doubleSolDSol.reset(new DoubleSolenoid(0, 0, 1));
    lw->AddActuator("Double Sol", "DSol", doubleSolDSol);
    
    switchLimitSwitch.reset(new DigitalInput(0));
    lw->AddSensor("Switch", "LimitSwitch", switchLimitSwitch);
    
    spinSpinOnly.reset(new Talon(0));
    lw->AddActuator("Spin", "SpinOnly", std::static_pointer_cast<Talon>(spinSpinOnly));
    
    potpot.reset(new AnalogInput(0));
    lw->AddSensor("Pot", "pot", potpot);
    
    ultraSonicUltra.reset(new AnalogInput(1));
    lw->AddSensor("UltraSonic", "Ultra", ultraSonicUltra);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
